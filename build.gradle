plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.1'
}

group = 'amata1219.like'
version = 'v4.0.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'jitpack-repo'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'pcgf-repo'
        url = 'https://repo.pcgamingfreaks.at/repository/maven-everything'
    }
    maven {
        name = 'codemc-repo'
        url = 'https://repo.codemc.io/repository/maven-public/'
    }
}

dependencies {
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.18.2-R0.1-SNAPSHOT'
    compileOnly group: 'com.github.MilkBowl', name: 'VaultAPI', version: '1.7'
    compileOnly group: 'at.pcgamingfreaks.pcgf_pluginlib', name: 'pcgf_pluginlib-bukkit', version: '1.0.36-SNAPSHOT'
    compileOnly group: 'at.pcgamingfreaks.pcgf_pluginlib', name: 'pcgf_pluginlib-uuid', version: '1.0.29-SNAPSHOT'
    compileOnly group: 'com.gmail.filoghost.holographicdisplays', name: 'holographicdisplays-api', version: '2.4.9'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint:unchecked'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}